x-app:
  &app
  build:
    context: .
    args:
      RUBY_VERSION: '3.3.0'
      PG_MAJOR: '16'
  image: todo-api-dev:1.0.0
  tmpfs:
    - /tmp

x-backend:
  &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - ..:/app:cached
    - bundle:/usr/local/bundle
    - history:/usr/local/hist
    - ./.psqlrc:/root/.psqlrc:ro
    - ./.bashrc:/root/.bashrc:ro
  environment:
    &backend_environment
    DATABASE_URL: postgres://postgres:postgres@postgres:5432/todo-api-development
    REDIS_URL: redis://redis:6379/
    MALLOC_ARENA_MAX: 2
    RACK_ENV: development
    WEB_CONCURRENCY: ${WEB_CONCURRENCY:-0}
    HISTFILE: /usr/local/hist/.bash_history
    PSQL_HISTFILE: /usr/local/hist/.psql_history
    IRB_HISTFILE: /usr/local/hist/.irb_history
    EDITOR: vi
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  runner:
    <<: *backend
    command: /bin/bash

  api:
    <<: *backend
    command: bundle exec puma -C config/puma.rb
    ports:
      - 3000:3000

  postgres:
    image: postgres:16
    volumes:
      - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - .psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - history:/user/local/hist
    environment:
      PSQL_HISTFILE: /user/local/hist/.psql_history
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:7.0-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  bundle:
  history:
  postgres:
  redis:
