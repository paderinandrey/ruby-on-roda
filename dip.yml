version: "7.1"

# Define default environment variables to pass
# to Docker Compose
environment:
  RAILS_ENV: development

compose:
  files:
    - .dockerdev/compose.yml
  project_name: todo-api

interaction:
  # This command spins up a Rails container with the required dependencies (such as databases),
  # and opens a terminal within it.
  runner:
    description: Open a Bash shell within a Rails container (with dependencies up)
    service: api
    command: /bin/bash

  # Run a Rails container without any dependent services (useful for non-Rails scripts)
  bash:
    description: Run an arbitrary script within a container (or open a shell without deps)
    service: api
    command: /bin/bash
    compose_run_options: [no-deps]

  # A shortcut to run Bundler commands
  bundle:
    description: Run Bundler commands
    service: api
    command: bundle
    compose_run_options: [no-deps]

  api:
    description: Run Api commands
    service: api
    command: bundle exec rackup

  rubocop:
    description: Run rubocop
    service: api
    command: bundle exec rubocop
    # subcommands:
    #   s:
    #     description: Run Rails server at http://localhost:3000
    #     service: web
    #     compose:
    #       run_options: [service-ports, use-aliases]
  # rails:
  #   description: Run Rails commands
  #   service: rails
  #   command: bundle exec rails
  #   subcommands:
  #     s:
  #       description: Run Rails server at http://localhost:3000
  #       service: web
  #       compose:
  #         run_options: [service-ports, use-aliases]
  # test:
  #   description: Run unit tests
  #   service: api
  #   command: bundle exec rails test
  #   environment:
  #     RAILS_ENV: test

  rspec:
    description: Run tests
    service: runner
    environment:
      RAILS_ENV: test
    command: bundle exec rspec

  psql:
    description: Run Postgres psql console
    service: postgres
    default_args: productive_development
    command: psql -h postgres -U postgres

provision:
  # We need the `|| true` part because some docker-compose versions
  # cannot down a non-existent container without an error,
  # see https://github.com/docker/compose/issues/9426
  - dip compose down --volumes || true
  - dip compose up -d postgres
  # - dip compose up -d redis
  # - dip bash -c bin/setup
